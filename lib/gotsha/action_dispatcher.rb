# frozen_string_literal: true

module Gotsha
  class ActionDispatcher
    INIT_SETUP_ACTION = "init"
    DEFAULT_ACTION = "help"

    def self.call(action_name = DEFAULT_ACTION)
      action_name ||= DEFAULT_ACTION

      new.call(action_name)
    end

    def call(action_name = DEFAULT_ACTION)
      if UserConfig.blank? && action_name.to_s != INIT_SETUP_ACTION
        raise Errors::HardFail, "config files not found, please run `bundle exec gotsha init` first"
      end

      if UserConfig.get(:autogenerated)
        raise Errors::HardFail,
              "autogenerated config detected! Please, remove `autogenerated = true` from `.gotsha/config.toml`"
      end

      begin
        action = Kernel.const_get("Gotsha::Actions::#{action_name.capitalize}")
      rescue NameError
        commands = Gotsha::Actions.constants.map(&:downcase).sort.join("\n")

        raise Errors::HardFail,
              "unknown command `#{action_name}`, available commands: \n\n#{commands}"
      end

      action.new.call
    end
  end
end
